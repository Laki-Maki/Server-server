# test-subscriptions.ps1
$baseUrl = "http://localhost:8080"

Write-Host "1. Создание подписки..."
$createBody = @{
    service_name = "TNT"
    price        = 300
    user_id      = "40601fee-2bf1-4721-ae6f-7636e79a0cba"
    start_date   = "08-2025"
} | ConvertTo-Json

$created = Invoke-RestMethod -Uri "$baseUrl/subscriptions" -Method POST -Body $createBody -ContentType "application/json"
Write-Host "Создана подписка:" ($created | ConvertTo-Json -Depth 5)
$id = $created.id

Write-Host "`n2. Получение подписки по ID..."
$sub = Invoke-RestMethod -Uri "$baseUrl/subscriptions/$id" -Method GET
$sub | ConvertTo-Json -Depth 5

Write-Host "`n3. Получение списка подписок..."
$list = Invoke-RestMethod -Uri "$baseUrl/subscriptions?limit=10&offset=0" -Method GET
$list | ConvertTo-Json -Depth 5 


Write-Host "`n4. Обновление подписки..."
$updateBody = @{
    service_name = "TNT Premium"
    price        = 500
    user_id      = "60601fee-2bf1-4721-ae6f-7636e79a0cba"
    start_date   = "10-2025"
    end_date     = "11-2025"
} | ConvertTo-Json

$updated = Invoke-RestMethod -Uri "$baseUrl/subscriptions/$id" -Method PUT -Body $updateBody -ContentType "application/json"
Write-Host "Обновлённая подписка:" ($updated | ConvertTo-Json -Depth 5)

Write-Host "`n5. Агрегация стоимости..."
$agg = Invoke-RestMethod -Uri "$baseUrl/subscriptions/aggregate?from=09-2025&to=12-2025&user_id=60601fee-2bf1-4721-ae6f-7636e79a0cba" -Method GET
Write-Host "Агрегированная стоимость:" ($agg | ConvertTo-Json -Depth 5)


Write-Host "`n6. Удаление подписки..."
Invoke-RestMethod -Uri "$baseUrl/subscriptions/$id" -Method DELETE
Write-Host "Подписка удалена"

Write-Host "`n7. Проверка, что подписки больше нет..."
try {
    Invoke-RestMethod -Uri "$baseUrl/subscriptions/$id" -Method GET
} catch {
    Write-Host "Ожидаемая ошибка (not found):" $_.Exception.Message
}
